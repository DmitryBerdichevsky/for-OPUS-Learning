
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Статус                              = Перечисления.СтатусыВидовПланов.Черновик;
	ВладелецПлана                       = Пользователи.ТекущийПользователь();
	ВидСогласуемогоРесурсаПлановыхРабот = Справочники.ВидыСогласуемыхРесурсов.ВидРесурсаПоУмолчанию();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСогласованиеРесурсов") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидСогласуемогоРесурсаПлановыхРабот");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьДублиУчастников();
	СформироватьПредставлениеУчастников();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Справочники.ВидыПланов.УдалитьНеСоответствующиеНастройкамПланы(Ссылка);
	Если Статус = Перечисления.СтатусыВидовПланов.Действует Тогда
		Справочники.ВидыПланов.СоздатьПланыПоВидуПланаЕслиНеобходимо(Ссылка, НачалоДня(ТекущаяДатаСеанса()), 4);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьПредставлениеУчастников()
	
	УчастникиСтрокой = "";
	КоличествоУчастниковПланирования = УчастникиПланирования.Количество();
	
	Если КоличествоУчастниковПланирования = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если КоличествоУчастниковПланирования > 3 Тогда
		УчастникиСтрокой = СтрШаблон(НСтр("ru = 'Участников - %1, в т.ч.'"), КоличествоУчастниковПланирования);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 3
	|	Пользователи.Представление КАК Представление
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка В(&МассивУчастников)";
	
	Запрос.УстановитьПараметр("МассивУчастников", УчастникиПланирования.ВыгрузитьКолонку("Участник"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Индекс = 0;
	
	Пока Выборка.Следующий() Цикл
	
		Если Индекс = 0 Тогда
			УчастникиСтрокой = УчастникиСтрокой + " ";
		Иначе
			УчастникиСтрокой = УчастникиСтрокой + ", ";
		КонецЕсли;
		
		УчастникиСтрокой = УчастникиСтрокой + Выборка.Представление;
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	УчастникиСтрокой = УчастникиСтрокой + ".";
	
КонецПроцедуры

Процедура ОчиститьДублиУчастников()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Участники.Участник    КАК Участник,
	|	Участники.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Участники
	|ИЗ
	|	&Участники КАК Участники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	Участники.Участник             КАК Участник,
	|	КОЛИЧЕСТВО(Участники.Участник) КАК Количество
	|ИЗ
	|	Участники КАК Участники
	|
	|СГРУППИРОВАТЬ ПО
	|	Участники.Участник
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(Участники.Участник) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Участник КАК Участник
	|ИЗ
	|	(ВЫБРАТЬ
	|		Участники.Участник КАК Участник,
	|		МИНИМУМ(Участники.НомерСтроки) КАК НомерСтроки
	|	ИЗ
	|		Участники КАК Участники
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Участники.Участник) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки";
	
	Запрос.УстановитьПараметр("Участники", УчастникиПланирования.Выгрузить());
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Результат[1].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	УчастникиПланирования.Очистить();;
	
	Выборка = Результат[2].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = УчастникиПланирования.Добавить();
		НоваяСтрока.Участник = Выборка.Участник;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли




