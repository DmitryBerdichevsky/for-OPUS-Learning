#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Автор = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Pipeline_ID = "";
	Автор = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение
		И Проект.ЗапускатьАвтоматическоеТестирование Тогда
		Если НЕ ЗначениеЗаполнено(Номер) Тогда
			УстановитьНовыйНомер();
		КонецЕсли;
		Результат = ТестированиеЗапускТестирования.ЗапуститьТестирование(Проект, Ветка.Имя, ПараметрыДляЗапускаТестирования());
		
		Если Результат.ЗапросВыполненУспешно Тогда
			Pipeline_ID = Результат.Ответ;
		Иначе
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.Ответ, ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Если Проект.ЗапускатьАвтоматическоеТестирование
		И ЗначениеЗаполнено(Pipeline_ID) Тогда
		Результат = ТестированиеЗапускТестирования.ОтменитьТестирование(Проект, Pipeline_ID);
		Если НЕ Результат.ЗапросВыполненУспешно Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.Ответ, ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыДляЗапускаТестирования()
	
	Параметры = Новый Соответствие;
	Параметры.Вставить("TRIGGER_ID", СокрЛП(Номер));
	
	Запрос = Новый Запрос;
	
	Если ЗапуститьТестыВыполненныеСОшибкой Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	РезультатыВыполненияТестовСрезПоследних.Тест КАК Ссылка,
		               |	РезультатыВыполненияТестовСрезПоследних.Тест.Код КАК Код,
		               |	РезультатыВыполненияТестовСрезПоследних.Тест.Наименование КАК Наименование,
		               |	РезультатыВыполненияТестовСрезПоследних.Тест.ИмяВСистемеСборки КАК ИмяВСистемеСборки,
		               |	РезультатыВыполненияТестовСрезПоследних.Тест.UIDНастройкиСценария КАК UIDНастройкиСценария,
		               |	РезультатыВыполненияТестовСрезПоследних.Тест.НастройкаЗапускаСценария.Код КАК НастройкаЗапускаСценарияКод,
		               |	РезультатыВыполненияТестовСрезПоследних.Тест.НастройкаЗапускаПроцесса.Код КАК НастройкаЗапускаПроцессаКод,
		               |	ВЫБОР
		               |		КОГДА РезультатыВыполненияТестовСрезПоследних.Тест.НастройкаЗапускаСценария <> ЗНАЧЕНИЕ(Справочник.НастройкиЗапускаСценариев.ПустаяСсылка)
		               |			ТОГДА РезультатыВыполненияТестовСрезПоследних.Тест.НастройкаЗапускаСценария.Владелец.ИдентификаторБазы
		               |		ИНАЧЕ РезультатыВыполненияТестовСрезПоследних.Тест.НастройкаЗапускаПроцесса.ЭталоннаяБаза.ИдентификаторБазы
		               |	КОНЕЦ КАК ИдентификаторБазы
		               |ИЗ
		               |	РегистрСведений.РезультатыВыполненияТестов.СрезПоследних КАК РезультатыВыполненияТестовСрезПоследних
		               |ГДЕ
		               |	РезультатыВыполненияТестовСрезПоследних.Ветка = &Ветка
		               |	И РезультатыВыполненияТестовСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВыполненияТеста.ВыполненСОшибкой)";
		Запрос.УстановитьПараметр("Ветка", Ветка);
		ЗаполнитьПараметрыДляЗапускаПоТестам(Запрос.Выполнить().Выбрать(), Параметры);

	КонецЕсли;
	Если ЗначениеЗаполнено(Настройка) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	Тесты.Ссылка КАК Ссылка,
		               |	Тесты.Ссылка.Код КАК Код,
		               |	Тесты.Наименование КАК Наименование,
		               |	Тесты.ИмяВСистемеСборки КАК ИмяВСистемеСборки,
		               |	Тесты.UIDНастройкиСценария КАК UIDНастройкиСценария,
		               |	Тесты.НастройкаЗапускаСценария.Код КАК НастройкаЗапускаСценарияКод,
		               |	Тесты.НастройкаЗапускаПроцесса.Код КАК НастройкаЗапускаПроцессаКод,
		               |	ВЫБОР
		               |		КОГДА Тесты.НастройкаЗапускаСценария <> ЗНАЧЕНИЕ(Справочник.НастройкиЗапускаСценариев.ПустаяСсылка)
		               |			ТОГДА Тесты.НастройкаЗапускаСценария.Владелец.ИдентификаторБазы
		               |		ИНАЧЕ Тесты.НастройкаЗапускаПроцесса.ЭталоннаяБаза.ИдентификаторБазы
		               |	КОНЕЦ КАК ИдентификаторБазы
		               |ИЗ
		               |	Справочник.Тесты КАК Тесты
		               |ГДЕ
		               |	(Тесты.Родитель В (&Тесты)
		               |			ИЛИ Тесты.Ссылка В (&Тесты))";
		Запрос.УстановитьПараметр("Тесты", Настройка.Тесты.ВыгрузитьКолонку("Тест"));
		ЗаполнитьПараметрыДляЗапускаПоТестам(Запрос.Выполнить().Выбрать(), Параметры);
		
		Для Каждого Строка Из Настройка.ПараметрыЗапуска Цикл
			НовоеЗначение = Строка.Значение;
			Если Параметры.Получить(Строка.Ключ) <> Неопределено Тогда
				НовоеЗначение = Параметры[Строка.Ключ] + " " + НовоеЗначение;
			КонецЕсли;
			Параметры.Вставить(Строка.Ключ, НовоеЗначение);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

Процедура ЗаполнитьПараметрыДляЗапускаПоТестам(ВыборкаТестов, Параметры)
	ЗаписьJSON = Новый ЗаписьJSON;
	ЕстьТесты = Ложь;
	
	Пока ВыборкаТестов.Следующий() Цикл
		ЕстьТесты = Истина;
			
		ЗаписьJSON.УстановитьСтроку();
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		ЗаписьJSON.ЗаписатьИмяСвойства("Тест");
		ЗаписьJSON.ЗаписатьЗначение(XMLСтрока(ВыборкаТестов.Наименование));
		ЗаписьJSON.ЗаписатьИмяСвойства("ИмяВСистемеСборки");
		ЗаписьJSON.ЗаписатьЗначение(XMLСтрока(ВыборкаТестов.ИмяВСистемеСборки));
		ЗаписьJSON.ЗаписатьИмяСвойства("UIDНастройкиСценария");
		ЗаписьJSON.ЗаписатьЗначение(XMLСтрока(ВыборкаТестов.UIDНастройкиСценария));
		ЗаписьJSON.ЗаписатьИмяСвойства("НастройкаЗапускаСценария");
		ЗаписьJSON.ЗаписатьЗначение(XMLСтрока(ВыборкаТестов.НастройкаЗапускаСценарияКод));
		ЗаписьJSON.ЗаписатьИмяСвойства("НастройкаЗапускаПроцесса");
		ЗаписьJSON.ЗаписатьЗначение(XMLСтрока(ВыборкаТестов.НастройкаЗапускаПроцессаКод));
		ЗаписьJSON.ЗаписатьИмяСвойства("ИдентификаторБазы");
		ЗаписьJSON.ЗаписатьЗначение(XMLСтрока(ВыборкаТестов.ИдентификаторБазы));
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		JsonТесты = ЗаписьJSON.Закрыть();
		Параметры.Вставить("test" + СокрЛП(ВыборкаТестов.Код), JsonТесты);
			
	КонецЦикла;
	Если ЕстьТесты Тогда 
		Параметры.Вставить("TEST_FILTER", "TRUE");
	КонецЕсли;
	
	ЗаписьJSON = Неопределено;
КонецПроцедуры

#КонецОбласти

#КонецЕсли